Ext.data.JsonP.command_app({"guide":"<h1>Developing Ext JS Apps</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/command_app-section-1'>Introduction</a></li>\n<li><a href='#!/guide/command_app-section-2'>Generating Your Application</a></li>\n<li><a href='#!/guide/command_app-section-3'>Extending Your Application</a></li>\n<li><a href='#!/guide/command_app-section-4'>Custom Themes</a></li>\n<li><a href='#!/guide/command_app-section-5'>Building Your Application</a></li>\n<li><a href='#!/guide/command_app-section-6'>Upgrading Your Application</a></li>\n</ol>\n</div>\n\n<p><p><img src=\"guides/command_app/../command/sencha-command-128.png\" alt=\"\"></p></p>\n\n<h2 id='command_app-section-1'>Introduction</h2>\n\n<p>This guide will walk through the process of developing an Ext JS application starting with\nthe <code>sencha generate app</code> command and using the corresponding <code>sencha app build</code> command\nto produce your build.</p>\n\n<p>If you have an existing, single page application you might consider using Sencha Command\nto build an application skeleton and transporting your application into this preferred\nstructure. This will provide you with the maximum leverage from Sencha Command.</p>\n\n<p>If this path is not suitable, however, you can still use Sencha Command to help with many\naspects of your development. For developing single-page applications with a custom folder\nstructure, see <a href=\"#/guide/command_app_single\">Developing Single-Page Ext JS Apps</a>.</p>\n\n<p>For those applications that have multiple pages, it may be helpful to start by learning\nabout the simple uses of Sencha Command described in this and the above guide. The details\nof more complex, multi-page applications can be found in\n<a href=\"#/guide/command_app_multi\">Developing Multi-Page Ext JS Apps</a>.</p>\n\n<h2 id='command_app-section-2'>Generating Your Application</h2>\n\n<p>The starting point for most projects is to generate an application skeleton. This is done\nusing:</p>\n\n<pre><code>sencha generate app MyApp /path/to/MyApp\n</code></pre>\n\n<p><strong>IMPORTANT:</strong> The above command must be able to determine your desired SDK. This can be\nsatisfied by either executing this command from a folder containing an extracted SDK\ndistribution or by using the <code>-sdk</code> switch like so:</p>\n\n<pre><code>sencha -sdk /path/to/SDK generate app MyApp /path/to/MyApp\n</code></pre>\n\n<p>The application you have generated will look like this:</p>\n\n<pre><code>index.html              # The entry point to your application\napp.json                # Application configuration\napp/                    # Your application's source code in MVC structure\n    app.js              # Your application's initialization logic\n    controller/\n        Main.js         # The initial default Controller\n    model/\n    store/\n    view/\n        Main.js         # The initial default View\n\nbuild/                  # The folder where build output is placed.\n\nresources/\n    css/\n        app.css         # The main stylesheet, compiled from ../sass/app.scss\n        default/        # Contains content generated for the default theme\n            theme.css   # The CSS file generated from ../sass/default\n\n    sass/\n        app.scss        # The SASS file which compiles to ../css/app.css\n        default/        # Contains the SASS code for the default theme\n\n    theme/              # This folder contains Theme Builder information\n        custom.js       # Contains any theme customizations (like custom components)\n        manifest.js     # Generated (do not edit)\n        render.js       # Generated (do not edit)\n        shortcuts.js    # Generated (do not edit)\n        styles.css      # Generated (do not edit)\n        default/        # The name of the theme (\"default\" is generated initially)\n            theme.html  # The control file for generating a theme\n\nsdk/                    # A copy of the SDK from which this application was generated\n</code></pre>\n\n<h2 id='command_app-section-3'>Extending Your Application</h2>\n\n<p><code>sencha generate</code> helps you quickly generate common MVC components such as controllers or\nmodels:</p>\n\n<pre><code>sencha help generate\n</code></pre>\n\n<p>You should see this:</p>\n\n<pre><code>Sencha Command v3.0.0\nHELP -- generate\n\nCOMMANDS:\n* app - Generates a starter application\n* controller - Generates a Controller for the current application\n* model - Generates a Model for the current application\n* profile - (Touch Only) Generates a profile for the current application\n* store - Generates a Store for the current application\n* view - Generates a View for the current application\n</code></pre>\n\n<p><strong>IMPORTANT</strong>: In order to execute these commands, the current directory <strong>must</strong> be the\ntop-level folder of your application (in this case, \"/path/to/MyApp\").</p>\n\n<h3>Adding New Models</h3>\n\n<p>Adding a model to your application is done by making the /path/to/MyApp your current\ndirectory and running Sencha Command:</p>\n\n<pre><code>cd /path/to/MyApp\nsencha generate model User id:int,name,email\n</code></pre>\n\n<p>This command will add a model to the application called \"User\" with the given 3 fields.</p>\n\n<h3>Adding New Controllers</h3>\n\n<p>Adding a controller is similar to adding a Model:</p>\n\n<pre><code>cd /path/to/MyApp\nsencha generate controller Central\n</code></pre>\n\n<p>There are no other parameters in this case beyond the controller name.</p>\n\n<h3>Adding New Views</h3>\n\n<p>TODO</p>\n\n<h3>Adding New Stores</h3>\n\n<p>TODO</p>\n\n<h2 id='command_app-section-4'>Custom Themes</h2>\n\n<p>All applications start with a \"default\" theme, so it is typically not necessary to add any\nthemes. If you application wants to support multiple themes, however, then this is the\nfirst step:</p>\n\n<pre><code>cd /path/to/MyApp\nsencha generate theme red\n</code></pre>\n\n<p>This will create the following folders and some starter content:</p>\n\n<ul>\n<li><code>./resources/theme/red</code></li>\n<li><code>./resources/css/red</code></li>\n<li><code>./resources/sass/red</code></li>\n</ul>\n\n\n<p>For details on how to manage and build themes, see <a href=\"#/guide/command_theme\">Building Themes</a>.</p>\n\n<h2 id='command_app-section-5'>Building Your Application</h2>\n\n<p>All that is required to build your application is to run the following command:</p>\n\n<pre><code>sencha app build\n</code></pre>\n\n<p><strong>IMPORTANT</strong>: In order to execute this command, the current directory <strong>must</strong> be the\ntop-level folder of your application (in this case, \"/path/to/MyApp\").</p>\n\n<p>This command will build your markup page, JavaScript code, SASS and themes into the \"build\"\nfolder.</p>\n\n<h2 id='command_app-section-6'>Upgrading Your Application</h2>\n\n<p>Generated applications always have their own copies of the SDK from which they were originally\ngenerated. Upgrading these application to the a new of the SDK means replacing the old copy\nwith the new one.</p>\n\n<p>This is done by changing directories to your application folder and running the following\ncommand:</p>\n\n<pre><code>sencha app upgrade ../downloads/ext-4.1.2\n</code></pre>\n\n<p>Where the path is the path to a downloaded and extracted SDK.</p>\n","title":"Developing Ext JS Apps"});