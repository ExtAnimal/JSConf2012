Ext.data.JsonP.command({"guide":"<h1>Introduction to Sencha Cmd</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/command-section-1'>Requirements</a></li>\n<li><a href='#!/guide/command-section-2'>Command Basics</a></li>\n<li><a href='#!/guide/command-section-3'>Current Directory</a></li>\n<li><a href='#!/guide/command-section-4'>Developing Applications</a></li>\n<li><a href='#!/guide/command-section-5'>Beyond The Basics</a></li>\n<li><a href='#!/guide/command-section-6'>Troubleshooting</a></li>\n</ol>\n</div>\n\n<p>Sencha Cmd is a cross-platform command line tool that provides many automated tasks\naround the full life-cycle of your applications, from generating a fresh new project to\ndeploying for production.</p>\n\n<p><p><img src=\"guides/command/sencha-command-128.png\" alt=\"\"></p></p>\n\n<h2 id='command-section-1'>Requirements</h2>\n\n<p>Step 1: Download and install a <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">Jave Run-time Environment or JRE</a>.\nThe JRE version must be at least JRE 6, but the most up-to-date version is usually the best choice.</p>\n\n<p>Step 2: Download and install <a href=\"http://compass-style.org/\">Compass</a>. Compass may also have\nSystem Requirements that you will need to meet. Compass is required for most uses of\nSencha Cmd.</p>\n\n<p>Step 3: Download and install the latest <a href=\"http://www.sencha.com/products/sdk-tools\">Sencha Cmd</a>.</p>\n\n<p>Step 4: Download the latest <a href=\"http://www.sencha.com/products/extjs/\">Ext JS</a> or\n<a href=\"http://www.sencha.com/products/touch/\">Sencha Touch</a> SDK.</p>\n\n<p>Step 5: Extract the SDK to a local directory.</p>\n\n<p>Step 6: Verify that Sencha Cmd is working properly on your machine:</p>\n\n<p>Open a command line terminal, and run the following commands. Replace <code>/path/to/sdk</code> with\nthe actual path to the SDK that you extracted to previously (<strong>not the Sencha Cmd\ndirectory</strong>).</p>\n\n<pre><code>cd /path/to/sdk\nsencha\n</code></pre>\n\n<p>You should see output that starts like this:</p>\n\n<pre><code>Sencha Cmd v3.0.0\n...\n</code></pre>\n\n<p>If the above message appears and the version number is \"3.0.0\" or newer you are all set.</p>\n\n<h2 id='command-section-2'>Command Basics</h2>\n\n<p>All of the features provided by Sencha Cmd are arranged in categories (or modules) and\ncommands.</p>\n\n<pre><code>sencha [category] [command] [options...] [arguments...]\n</code></pre>\n\n<p>Help is available using the \"help\" command.</p>\n\n<pre><code>sencha help [module] [action]\n</code></pre>\n\n<p>For example, try this:</p>\n\n<pre><code>sencha help\n</code></pre>\n\n<p>And you should see this:</p>\n\n<pre><code>Sencha Cmd v3.0.0\n\nOPTIONS\n  * --debug, -d - Sets log level to higher verbosity\n  * --plain, -p - enables plain logging output (no highlighting)\n  * --quiet, -q - Sets log level to warnings and errors only\n  * --sdk-path, -s - sets the path to the target sdk\n\nCATEGORIES\n  * compile - Compile sources to produce concatenated output and metadata\n  * generate - Generate code like models and controllers or raw templates\n  * theme - Builds a set of theme images from a given html page\n  * app - Perform various application build processes\n\nCOMMANDS\n  * ant - Invoke Ant with helpful properties back to Sencha Cmd\n  * build - Builds a project from a JSB3 file.\n  * config - Loads a config file or sets a configuration property\n  * help - Get help on using Sencha Cmd\n</code></pre>\n\n<h2 id='command-section-3'>Current Directory</h2>\n\n<p>In many cases, Sencha Cmd requires you have a specific current directory. Or it may just\nneed to know details about the relevant SDK. This can be determined easily when Sencha Cmd\nis run form an extracted SDK folder or from a generated application.</p>\n\n<p>The following is a summary of these needs organized by what is required and the commands\nthat have that requirement.</p>\n\n<ul>\n<li>Require knowledge of which SDK is in use\n\n<ul>\n<li><code>sencha generate app</code></li>\n<li><code>sencha compile</code></li>\n</ul>\n</li>\n<li>A generated application root folder\n\n<ul>\n<li><code>sencha generate ...</code> (all commands other than <code>app</code> and <code>workspace</code>)</li>\n<li><code>sencha app ...</code></li>\n</ul>\n</li>\n</ul>\n\n\n<p>The commands that require the current directory to be a generated application root folder\nwill fail if not run from such a folder.</p>\n\n<p>When a command requires knowledge of the SDK but you are not currently in an extracted SDK\nfolder or an application root folder, you need to use the <code>-sdk</code> switch like so:</p>\n\n<pre><code>sencha -sdk /path/to/sdk ...\n</code></pre>\n\n<h2 id='command-section-4'>Developing Applications</h2>\n\n<p>The starting point for most projects is to generate an application skeleton. This is done\nusing:</p>\n\n<pre><code>sencha generate app MyApp /path/to/MyApp\n</code></pre>\n\n<p>There are differences between the way Ext JS and Sencha Touch applications are structured.\nFurther, particularly for Ext JS users, applications can be quite large and may contain\nmultiple pages.</p>\n\n<p>To get started building applications using Sencha Cmd, consult the\n<a href=\"#/guide/command_app\">Using Sencha Cmd</a> guide.</p>\n\n<h2 id='command-section-5'>Beyond The Basics</h2>\n\n<p>There are many other details related to using Sencha Cmd that can be helpful. The <code>help</code>\ncommand is a great reference, but if you want to walk through all the highlights, consult\n<a href=\"#/guide/command_advanced\">Advanced Sencha Cmd</a>.</p>\n\n<h2 id='command-section-6'>Troubleshooting</h2>\n\n<h3>Command Not Found</h3>\n\n<p>Upon running <code>sencha</code>, if there is an error message appears saying \"sencha: command not found\"\non OS X / Linux or \"'sencha' is not recognized as an internal or external command, operable\nprogram or batch file.\" on Windows, follow these steps to troubleshoot:</p>\n\n<ul>\n<li>Close all existing terminal / command prompt windows and re-open them.</li>\n<li>Make sure that Sencha Cmd is properly installed:\n\n<ul>\n<li>The installation directory exists. By default, the installation path is:\n\n<ul>\n<li>Windows: <code>C:\\Users\\Me\\bin\\Sencha\\Cmd\\{version}</code></li>\n<li>Mac OS X: <code>~/bin/Sencha/Cmd/{version}</code></li>\n<li>Linux: <code>~/bin/Sencha/Cmd/{version}</code></li>\n</ul>\n</li>\n<li>The path to Sencha Cmd directory is prepended to your PATH environment variable.\nFrom the terminal, run <code>echo $PATH</code> (<code>echo %PATH%</code> on Windows). The Sencha Cmd\ndirectory should be displayed in part of the output. If this is not the case, add it\nto your PATH manually.</li>\n<li>The environment variable <code>SENCHA_CMD_{version}</code> is set, with the value being\nthe absolute path to the installation directory mentioned above. For example: If the\ninstalled version is '3.0.0', a <code>SENCHA_CMD_3_0_0</code> must be set. If the output is\nempty, set the environment variable manually. To check, go to the Command Prompt (or\n\"Terminal\") and run:\n\n<ul>\n<li>Windows: <code>echo %SENCHA_CMD_3_0_0%</code></li>\n<li>Other - <code>echo $SENCHA_CMD_3_0_0</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n\n<h3>Wrong Current Directory</h3>\n\n<p>A common mistake is to perform a command that requires the current directory to be either\nan extracted SDK directory or an application directory and yet not be in such a directory.\nIf this requirement is not met, Sencha Cmd will display an error and exit.</p>\n\n<p>Note that a valid application directory is one that was generated by Sencha Cmd, or one\nthat exactly follows that structure.</p>\n\n<h3>Errors While Resolving Dependencies</h3>\n\n<p>The <code>sencha app build</code> command works by reading your <code>index.html</code> and scanning for required\nclasses. If your application does not properly declare the classes it requires, the build\nwill usually complete but will not contain all the classes needed by your application.</p>\n\n<p>To ensure that you have all required classes specified, always develop with the debugger\nconsole enabled (\"Developer Tools\" in IE/Chrome, FireBug in FireFox and Web Inspector in\nSafari) and resolve all warnings / error messages as they appear.</p>\n\n<p>Whenever you see a warning like this:</p>\n\n<pre><code>[<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>] Synchronously loading 'Ext.foo.Bar'; consider adding 'Ext.foo.Bar' explicitly as a require of the corresponding class\n</code></pre>\n\n<p>Immediately add 'Ext.foo.Bar' inside the <code>requires</code> array property of the class from which\nthe dependency originates. If it is a application-wide dependency, add it to the <code>requires</code>\narray property inside <code><a href=\"#!/api/Ext-method-application\" rel=\"Ext-method-application\" class=\"docClass\">Ext.application</a>(...)</code> statement.</p>\n","title":"Getting Started"});